{"ast":null,"code":"var _jsxFileName = \"/Users/alinakudravceva/Desktop/todoReact/src/components/TaskList/TaskList.jsx\";\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Task from '../Task/Task';\nimport './TaskList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskList(_ref) {\n  let {\n    todos,\n    onDeleted,\n    onToggleDone,\n    date\n  } = _ref;\n  const elements = todos.map(items => /*#__PURE__*/_jsxDEV(Task, { ...items,\n    onDeleted: () => onDeleted(items.id),\n    onToggleDone: () => onToggleDone(items.id),\n    date: date\n  }, items.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n}\n_c = TaskList;\nTaskList.defaultProps = {\n  date: Date.now(),\n  onDeleted: () => {},\n  onToggleDone: () => {},\n  done: false\n};\nTaskList.propTypes = {\n  done: PropTypes.bool,\n  onDeleted: PropTypes.func,\n  date: PropTypes.func,\n  onToggleDone: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","PropTypes","Task","TaskList","todos","onDeleted","onToggleDone","date","elements","map","items","id","defaultProps","Date","now","done","propTypes","bool","func"],"sources":["/Users/alinakudravceva/Desktop/todoReact/src/components/TaskList/TaskList.jsx"],"sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Task from '../Task/Task';\nimport './TaskList.css';\n\nexport default function TaskList({ todos, onDeleted, onToggleDone, date }) {\n\n\n  const elements = todos.map((items) => (\n    <Task\n      key={items.id}\n      {...items}\n      onDeleted={() => onDeleted(items.id)}\n      onToggleDone={() => onToggleDone(items.id)}\n      date={date}\n    />\n  ));\n\n  return (\n    <>\n      <ul className=\"todo-list\">{elements}</ul>;\n    </>\n  );\n}\n\nTaskList.defaultProps = {\n  date: Date.now(),\n  onDeleted: () => {},\n  onToggleDone: () => {},\n  done: false,\n};\nTaskList.propTypes = {\n  done: PropTypes.bool,\n  onDeleted: PropTypes.func,\n  date: PropTypes.func,\n  onToggleDone: PropTypes.func,\n};\n"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,gBAAP;;;AAEA,eAAe,SAASC,QAAT,OAA4D;EAAA,IAA1C;IAAEC,KAAF;IAASC,SAAT;IAAoBC,YAApB;IAAkCC;EAAlC,CAA0C;EAGzE,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAWC,KAAD,iBACzB,QAAC,IAAD,OAEMA,KAFN;IAGE,SAAS,EAAE,MAAML,SAAS,CAACK,KAAK,CAACC,EAAP,CAH5B;IAIE,YAAY,EAAE,MAAML,YAAY,CAACI,KAAK,CAACC,EAAP,CAJlC;IAKE,IAAI,EAAEJ;EALR,GACOG,KAAK,CAACC,EADb;IAAA;IAAA;IAAA;EAAA,QADe,CAAjB;EAUA,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,WAAd;MAAA,UAA2BH;IAA3B;MAAA;MAAA;MAAA;IAAA,QADF;EAAA,gBADF;AAKD;KAlBuBL,Q;AAoBxBA,QAAQ,CAACS,YAAT,GAAwB;EACtBL,IAAI,EAAEM,IAAI,CAACC,GAAL,EADgB;EAEtBT,SAAS,EAAE,MAAM,CAAE,CAFG;EAGtBC,YAAY,EAAE,MAAM,CAAE,CAHA;EAItBS,IAAI,EAAE;AAJgB,CAAxB;AAMAZ,QAAQ,CAACa,SAAT,GAAqB;EACnBD,IAAI,EAAEd,SAAS,CAACgB,IADG;EAEnBZ,SAAS,EAAEJ,SAAS,CAACiB,IAFF;EAGnBX,IAAI,EAAEN,SAAS,CAACiB,IAHG;EAInBZ,YAAY,EAAEL,SAAS,CAACiB;AAJL,CAArB"},"metadata":{},"sourceType":"module"}